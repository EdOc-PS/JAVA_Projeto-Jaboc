/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package jaboc_UI.JabocUI_Utilidades.JabocUI_popUp;


import jaboc_UI.JabocUI_Utilidades.JabocUI_Classes.MensagemIncorreta;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import raven.glasspanepopup.GlassPanePopup;

/**
 *
 * @author guilh
 */
public class PopUp_EditarPessoal extends javax.swing.JPanel {
    private String mensagem;
    /**
     * Creates new form PopUp_EditarPessoal
     */
    public PopUp_EditarPessoal(String mensagem) {
        initComponents();
        this.conferirMensagem(mensagem);
        this.estilizarIcone();
        this.setVisible(true);
        this.setOpaque(false);
    }
     @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2 = (Graphics2D) g.create();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.fill(new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), 20, 20));
        g2.dispose();
        super.paintComponent(g); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }
    private void conferirMensagem(String mensagem){
        String editadoSucesso = "Edição concluída com sucesso!";
        String erroEditar = "Ocorreu um erro ao editar!";

        if(!mensagem.equals(editadoSucesso) && !mensagem.equals(erroEditar)){
            try{
                throw new MensagemIncorreta(editadoSucesso +" | "+ erroEditar);
            }catch(MensagemIncorreta error){
                error.printStackTrace();
            }
            
            this.mensagem = "Parâmetro não está correto!";
            this.jLabel_alerta.setText("Parâmetro não está correto!");
        }else{
            
            this.mensagem = mensagem;
            this.jLabel_alerta.setText(mensagem);
        }
    }
    
    private void estilizarIcone(){
        String editadoSucesso = "Edição concluída com sucesso!";
        String erroEditar = "Ocorreu um erro ao editar!";
        
        Image imagemLida;
        try{
            if(this.mensagem.equals(editadoSucesso)){
                imagemLida = ImageIO.read(new File("src/img/icons/i_certo3.png"));
            }else if(this.mensagem.equals(erroEditar)){
                imagemLida = ImageIO.read(new File("src/img/icons/i_erroEditar.png"));
            }else{
                imagemLida = ImageIO.read(new File("src/img/icons/i_404.png"));
            }
            
            Icon imagemIcone = new ImageIcon(imagemLida);
            this.icone.setIcon(imagemIcone);
            
        }catch(IOException error){
            error.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bPopUp = new jaboc_UI.jabocUI_Utilidades.ButtonCirculo();
        jLabel_alerta = new javax.swing.JLabel();
        icone = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setEnabled(false);

        bPopUp.setBackground(new java.awt.Color(250, 112, 112));
        bPopUp.setForeground(new java.awt.Color(255, 255, 255));
        bPopUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons/x.png"))); // NOI18N
        bPopUp.setBorderPainted(false);
        bPopUp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bPopUp.setPreferredSize(new java.awt.Dimension(27, 27));
        bPopUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPopUpActionPerformed(evt);
            }
        });

        jLabel_alerta.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        jLabel_alerta.setForeground(new java.awt.Color(79, 84, 101));
        jLabel_alerta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_alerta.setText("Um texto de edição será exibido!");

        icone.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        icone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons/i_edfuncionario2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_alerta, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addComponent(icone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bPopUp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icone, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_alerta, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bPopUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPopUpActionPerformed
        GlassPanePopup.closePopupLast();
    }//GEN-LAST:event_bPopUpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private jaboc_UI.jabocUI_Utilidades.ButtonCirculo bPopUp;
    private javax.swing.JLabel icone;
    private javax.swing.JLabel jLabel_alerta;
    // End of variables declaration//GEN-END:variables
}
